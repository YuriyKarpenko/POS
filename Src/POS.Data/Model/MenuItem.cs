//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace POS.Data.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BillItem))]
    [KnownType(typeof(Division))]
    [KnownType(typeof(MenuGroup))]
    [KnownType(typeof(Price))]
    [KnownType(typeof(User))]
    public partial class MenuItem: INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public System.Guid Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private System.Guid _id;
    
        [DataMember]
        public Nullable<System.Guid> MenuGroupId
        {
            get { return _menuGroupId; }
            set
            {
                if (_menuGroupId != value)
                {
                    _menuGroupId = value;
                    OnPropertyChanged("MenuGroupId");
                }
            }
        }
        private Nullable<System.Guid> _menuGroupId;
    
        [DataMember]
        public System.Guid DivisionId
        {
            get { return _divisionId; }
            set
            {
                if (_divisionId != value)
                {
                    _divisionId = value;
                    OnPropertyChanged("DivisionId");
                }
            }
        }
        private System.Guid _divisionId;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public Nullable<int> Code
        {
            get { return _code; }
            set
            {
                if (_code != value)
                {
                    _code = value;
                    OnPropertyChanged("Code");
                }
            }
        }
        private Nullable<int> _code;
    
        [DataMember]
        public string BarCode
        {
            get { return _barCode; }
            set
            {
                if (_barCode != value)
                {
                    _barCode = value;
                    OnPropertyChanged("BarCode");
                }
            }
        }
        private string _barCode;
    
        [DataMember]
        public string Image
        {
            get { return _image; }
            set
            {
                if (_image != value)
                {
                    _image = value;
                    OnPropertyChanged("Image");
                }
            }
        }
        private string _image;
    
        [DataMember]
        public System.Guid UserCreatedId
        {
            get { return _userCreatedId; }
            set
            {
                if (_userCreatedId != value)
                {
                    _userCreatedId = value;
                    OnPropertyChanged("UserCreatedId");
                }
            }
        }
        private System.Guid _userCreatedId;
    
        [DataMember]
        public bool Hidden
        {
            get { return _hidden; }
            set
            {
                if (_hidden != value)
                {
                    _hidden = value;
                    OnPropertyChanged("Hidden");
                }
            }
        }
        private bool _hidden;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public ObservableCollection<BillItem> BillItems
        {
            get
            {
                if (_billItems == null)
                {
                    _billItems = new ObservableCollection<BillItem>();
                }
                return _billItems;
            }
            set
            {
                if (!ReferenceEquals(_billItems, value))
                {
                    _billItems = value;
                    OnNavigationPropertyChanged("BillItems");
                }
            }
        }
        private ObservableCollection<BillItem> _billItems;
    
        [DataMember]
        public Division Division
        {
            get { return _division; }
            set
            {
                if (!ReferenceEquals(_division, value))
                {
                    var previousValue = _division;
                    _division = value;
                    OnNavigationPropertyChanged("Division");
                }
            }
        }
        private Division _division;
    
        [DataMember]
        public MenuGroup MenuGroup
        {
            get { return _menuGroup; }
            set
            {
                if (!ReferenceEquals(_menuGroup, value))
                {
                    _menuGroup = value;
                    OnNavigationPropertyChanged("MenuGroup");
                }
            }
        }
        private MenuGroup _menuGroup;
    
        [DataMember]
        public ObservableCollection<Price> Prices
        {
            get
            {
                if (_prices == null)
                {
                    _prices = new ObservableCollection<Price>();
                }
                return _prices;
            }
            set
            {
                if (!ReferenceEquals(_prices, value))
                {
                    _prices = value;
                    OnNavigationPropertyChanged("Prices");
                }
            }
        }
        private ObservableCollection<Price> _prices;
    
        [DataMember]
        public User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    OnNavigationPropertyChanged("User");
                }
            }
        }
        private User _user;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;

        #endregion
    }
}
